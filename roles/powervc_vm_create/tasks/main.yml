---
# tasks file for powervc_vm_create
#

- name: Retrieve list of all PowerVC images
  openstack.cloud.image_info:
    auth: "{{ os_add_auth | default(omit) }}"
  register: result

- name: Get latest image matching os_image_filter variable
  ansible.builtin.set_fact:
    os_image_name: "{{ result | to_json | from_json | json_query(query) | sort(reverse=True) | first }}"
  vars:
    query: "openstack_image[?starts_with(name, '{{ os_image_filter }}')].name"
  delegate_to: localhost

# Ansible controller starts ssh-agent, when a machine credential is added to the template
# So the public key from that credential can be found
# The description of the ssh-key is replaced because it is dynamically created by every run
# Hence the playbook fails once the key exists
- name: get public ssh key injected my machine credential
  shell: |
    set -o pipefail
    ssh-add -L | awk '{print $1" "$2" awx-machine-credential"NR}'
  register: public_ssh_keys
  changed_when: false

- name: Create an SSH key pair for each key
  openstack.cloud.keypair:
    auth: "{{ os_add_auth | default(omit) }}"
    state: present
    name: "{{ item.split(' ')[2] }}"
    public_key: "{{ item }}"
  loop: "{{ public_ssh_keys.stdout_lines|list }}"

- name: Create a network port with fixed ip - need network permissions
  openstack.cloud.port:
    state: present
    name: "{{ vm_create_name }}-port1"
    network: "{{ os_network }}"
    fixed_ips:
      - ip_address: "{{ vm_create_ip }}"
  when:
   - vm_create_network_type == 'sea'
   - vm_create_ip is defined
   - vm_create_ip != ''

- name: Create a network port without ip - need network permissions and DHCP on the network
  openstack.cloud.port:
    state: present
    name: "{{ vm_create_name }}-port1"
    network: "{{ os_network }}"
  when:
   - vm_create_network_type == 'sea'
   - vm_create_ip is undefined

# we can only inject one SSH-Key
# hence we assume the first key in the list
- name: Create a new server instance
  openstack.cloud.server:
    state: present
    name: "{{ vm_create_name }}"
    image: "{{ os_image_name }}"
    flavor: "{{ vm_create_flavor_name }}"
    availability_zone: "{{ os_availability_zones[vm_create_deploy_target] }}"
    key_name: awx-machine-credential1
    nics:
      - port-name: "{{ vm_create_name }}-port1"
    meta:
      hostname: "{{ vm_create_name }}"
      group: "{{ vm_group_name }}"
    timeout: 300
  register: vm
  when:
   - vm_create_network_type == 'sea'

- name: Create a new server instance
  openstack.cloud.server:
    state: present
    name: "{{ vm_create_name }}"
    image: "{{ os_image_name }}"
    flavor: "{{ vm_create_flavor_name }}"
    availability_zone: "{{ os_availability_zones[vm_create_deploy_target] }}"
    key_name: awx-machine-credential1
    # network: "{{ os_network }}"
    nics:
      - net-name: "{{ os_network }}"
    meta:
      hostname: "{{ vm_create_name }}"
      group: "{{ vm_group_name }}"
    timeout: 300
  register: vm
  when:
   - vm_create_network_type == 'sriov'

- name: Dump info on created vm
  debug:
    var: vm
- name: Remove old ssh host keys from known hosts
  ansible.builtin.known_hosts:
    name: "{{  vm_create_name }}"
    state: absent
  when: tower_job_id is undefined
  throttle: 1
  failed_when: false
